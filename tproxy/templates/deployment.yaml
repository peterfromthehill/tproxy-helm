apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "tproxy.fullname" . }}
  labels:
    {{- include "tproxy.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "tproxy.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "tproxy.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "tproxy.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      - command:
        - sh
        - -c
        - socat -d -d -d TCP4-LISTEN:443,fork,bind=127.0.0.1,reuseaddr TCP4:localhost:$HTTPS_PORT && tail -F /dev/null
        env:
        - name: HTTPS_PORT
          value: {{ .Values.tproxy.httpsPort | quote }}
        image: docker.lej.eis.network/nicolaka/netshoot
        imagePullPolicy: Always
        name: socat
        resources:
          limits:
            cpu: 100m
            memory: 32Mi
          requests:
            cpu: 100m
            memory: 32Mi
      - name: {{ .Chart.Name }}
        env:
        - name: HTTP_PORT
          value: {{ .Values.tproxy.httpPort | quote}}
        - name: HTTPS_PORT
          value: {{ .Values.tproxy.httpsPort | quote }}
        - name: SSLKEY_FILE
          value: /ca/tls.key
        - name: SSLCERT_FILE
          value: /ca/tls.crt
        - name: HTTP_PROXY
          value: {{ .Values.tproxy.httpProxy }}
        - name: HTTPS_PROXY
          value: {{ .Values.tproxy.httpsProxy }}
        - name: NO_PROXY
          value: {{ .Values.tproxy.noProxy }}          
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        volumeMounts:
        - name: casecret
          mountPath: /ca
        ports:
        - name: http
          containerPort: {{ .Values.tproxy.httpPort }}
          protocol: TCP
        - name: https
          containerPort: {{ .Values.tproxy.httpsPort }}
          protocol: TCP
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        livenessProbe:
          exec:
            command:
            - # call a configmap script with
            # which curl || apk add curl
            # ADD CA Certs to /etc/ssl/cert.pem
            # curl -x "" --resolve www.google.de:443:127.0.0.1 https://www.google.de -v           
      volumes:
      - name: casecret
        secret:
          secretName: {{ .Values.tproxy.caSecretName }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
